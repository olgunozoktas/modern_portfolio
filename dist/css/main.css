/* Browser does not read scss so we have to compile them to regular css */
/* Install npm install node - sass */
/* Steps
 * npm init
 * npm install node-sass (node i node-sass) is the pretty much same thing
 */
/* To run sass use npm run sass, it will go to the package.json -> scripts: sass
 * sass: "node-sass -w scss/ -o dist/css/ --recursive"
 * -w = watch scss file and / -o = put the compiled css to the dist/css/ --recursive means do this operations recursive manner
*/
/* _config.scss is a partial that means we can put our variables and functions(mixins) in it */
/* to call this file we have just write its name */
/* Is like a function */
.menu-btn {
  position: absolute;
  /* to be sure that its in the place that we want */
  z-index: 3;
  right: 35px;
  top: 35px;
  cursor: pointer;
  transition: all 0.5s ease-out;
  /* transition: (what you want to transite?), (second), (what do want to do)? */ }
  .menu-btn .btn-line {
    width: 28px;
    height: 3px;
    margin: 0 0 5px 0;
    background: #fff;
    transition: all 0.5s ease-out;
    /* transition: (what you want to transite?), (second), (what do want to do)? */ }

.close {
  transform: rotate(180deg); }
  .close .btn-line:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px); }
  .close .btn-line:nth-child(2) {
    opacity: 0; }
  .close .btn-line:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px); }

.menu {
  position: fixed;
  top: 0;
  width: 100%;
  opacity: 0.9;
  visibility: hidden; }
  .menu.show {
    visibility: visible; }
  .menu-branding, .menu-nav {
    display: flex;
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
    float: left;
    width: 50%;
    /* each side will have 50 percent */
    height: 100vh;
    overflow: hidden;
    /* we do not need scrollbar */ }
  .menu-nav {
    margin: 0;
    padding: 0;
    background: #373737;
    list-style: none;
    transform: translate3d(0, -100%, 0);
    /* put it out of the window to the top */
    transition: all 0.5s ease-out;
    /* transition: (what you want to transite?), (second), (what do want to do)? */ }
    .menu-nav.show {
      transform: translate3d(0, 0, 0); }
  .menu-branding {
    background: #444;
    transform: translate3d(0, 100%, 0);
    /* put it out of the window to the bottom */
    transition: all 0.5s ease-out;
    /* transition: (what you want to transite?), (second), (what do want to do)? */ }
    .menu-branding.show {
      transform: translate3d(0, 0, 0); }
    .menu-branding .portrait {
      width: 250px;
      height: 250px;
      background: url("../img/portrait.jpg");
      border-radius: 50%;
      /* to make it circle */
      border: solid 3px #eece1a; }
  .menu .nav-item {
    transform: translate3d(600px, 0, 0);
    /* 600px to the right */
    transition: all 0.5s ease-out;
    /* transition: (what you want to transite?), (second), (what do want to do)? */ }
    .menu .nav-item.show {
      transform: translate3d(0, 0, 0); }
    .menu .nav-item .nav-link {
      display: inline-block;
      position: relative;
      font-size: 30px;
      text-transform: uppercase;
      padding: 1rem 0;
      font-weight: 300;
      color: #fff;
      text-decoration: none;
      transition: all 0.5s ease-out;
      /* transition: (what you want to transite?), (second), (what do want to do)? */ }
      .menu .nav-item .nav-link:hover {
        color: #eece1a; }
    .menu .nav-item.current > a {
      color: #eece1a; }

.nav-item:nth-child(1) {
  transition-delay: 0.1s; }

.nav-item:nth-child(2) {
  transition-delay: 0.2s; }

.nav-item:nth-child(3) {
  transition-delay: 0.3s; }

.nav-item:nth-child(4) {
  transition-delay: 0.4s; }

* {
  box-sizing: border-box;
  /* does not affect height and weight, just in the box */ }

body {
  background: #444;
  color: #fff;
  height: 100%;
  margin: 0;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.5; }
  body#bg-img {
    background: url(../img/background.jpg);
    background-attachment: fixed;
    background-size: cover;
    /* Cover the entire space */
    /* Instead of .overlay element we could write &:after {
          content: '',
          .....
      }
      and this makes the same effect as well because it will put an empty element after the #bg-img which has those feature
      */ }
    body#bg-img .overlay {
      position: absolute;
      /* Cover the all body */
      top: 0;
      /* Start from the top 0 */
      right: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      /* because we want the text to pushed up to the top */
      background: rgba(68, 68, 68, 0.9); }

h1,
h2,
h3 {
  margin: 0;
  font-weight: 400;
  /* To make it more thin or bold */ }
  h1.lg-heading,
  h2.lg-heading,
  h3.lg-heading {
    font-size: 6rem;
    /* rem means 16 * 6 */ }
  h1.sm-heading,
  h2.sm-heading,
  h3.sm-heading {
    margin-bottom: 2rem;
    padding: 0.2rem 1rem;
    background: rgba(73, 73, 73, 0.5);
    /* first parameter original color, how much want to make it lighther */ }

a {
  color: #fff;
  text-decoration: none; }

header {
  position: fixed;
  /* header will always in the top -> menu button */
  z-index: 2;
  /* how an element is close to you -> make it on the other element */
  width: 100%; }

.text-secondary {
  color: #eece1a; }

main {
  padding: 4rem;
  height: 100%; }
  main .icons {
    margin-top: 1rem; }
  main a {
    padding: 0.4rem; }
    main a:hover {
      color: #eece1a;
      transition: all 0.5s ease-out;
      /* transition: (what you want to transite?), (second), (what do want to do)? */ }
  main#home {
    overflow: hidden;
    /* not have scrollbar */ }
    main#home h1 {
      margin-top: 20vh;
      /* view port height, you can think that page has 100 different slides about height and this will take 20 of them*/ }
